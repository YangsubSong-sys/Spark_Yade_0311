// stdafx.cpp : source file that includes just the standard includes
//  BiOpTroCon.pch will be the pre-compiled header
//  stdafx.obj will contain the pre-compiled type information

#include "stdafx.h"
#include "A_Define1.h"  //son20190628
#include <iostream>
#include <vector>
#include "cderr.h"








HBRUSH              g_hbr = NULL;

CBiOpTroConView*    g_pDefaultView = NULL;
CChildView1*        g_pChildView1 = NULL;
CChildView2*        g_pChildView2 = NULL;
CChildView3*        g_pChildView3 = NULL;
CChildView4*        g_pChildView4 = NULL;
CChildView5*        g_pChildView5 = NULL;
CChildView6*        g_pChildView6 = NULL;
CChildView7*        g_pChildView7 = NULL;
CChildView8*        g_pChildView8 = NULL;
CChildView9*        g_pChildView9 = NULL;
CChildView10*       g_pChildView10 = NULL;
  




//son 저항값에 해당하는 mode를 찾기 위한 표.
// index: m_combo22(Recipe> Open Voltage combo) 의 index-1
//           0: <Volt.>, 1: *, 2: 10V, 3: *, 4: 30V,  5: 40V, 6: 50V*, 7: 60V, 8: 70V, 9: 80V, 
//          10: 90V,  11: 100V*, 12: 110V, 13: 120V, 14: 130V, 15: 140V, 16: 150V*, 17: 160V, 18: 170V, 19: 180V
//          20: 190V, 21: 200V*, 22: 210V, 23: 220V, 24: 230V, 25: 240V, 26: 250V*  

int dRecSetup[80][11]=
{     

    // No    rng1     rng2    rng3   rng4  rng5   mode1 mode2 mode3 mode4 mode5
  
    // OPEN
    {  0,       1, 1000000,      0,     0,    0,    1,    4,    0,    0,    0 }, // 1 V  open    
    {  1,     200,    1000, 100000,     0,    0,    6,    7,    8,    0,    0 }, // 10 V open QC R
//  {  0,     200,    1000, 100000,     0,    0,    6,    7,    8,    0,    0 }, //10V //sylee170412-1 //HOLD170414 
//  {  1,     200,    1000, 100000,     0,    0,    1,    2,    3,    0,    0 }, //15V //sylee170412-1 //HOLD170414
    
    {  2,     200,    1000, 100000,     0,    0,   11,   12,    0,    0,    0 }, // 20 V  Open    
    {  3,     200,    1000, 100000,     0,    0,   16,   17,    0,    0,    0 }, // 30 V
    {  4,     200,    1000, 100000,     0,    0,   21,   22,    0,    0,    0 }, // 40 V
    {  5,     200,    1000, 100000,     0,    0,   26,   27,    0,    0,    0 }, // 50 V  Open   
    {  6,     200,    1000, 100000,     0,    0,   31,   32,    0,    0,    0 }, // 60 V
    {  7,     200,    1000, 100000,     0,    0,   36,   37,    0,    0,    0 }, // 70 V
    {  8,     200,    1000, 100000,     0,    0,   41,   42,    0,    0,    0 }, // 80 V
    {  9,     200,    1000, 100000,     0,    0,   46,   47,    0,    0,    0 }, // 90 V
    { 10,     200,    1000, 100000,     0,    0,   51,   52,    0,    0,    0 }, // 100 V Open 
    { 11,     200,    1000, 100000,     0,    0,   56,   57,    0,    0,    0 }, // 110 V Open
    { 12,     200,    1000, 100000,     0,    0,   61,   62,    0,    0,    0 }, // 120 V Open
    { 13,     200,    1000, 100000,     0,    0,   66,   67,    0,    0,    0 }, // 130 V Open
    { 14,     200,    1000, 100000,     0,    0,   71,   72,    0,    0,    0 }, // 140 V Open      
    { 15,     200,    1000, 100000,     0,    0,   76,   77,    0,    0,    0 }, // 150 V Open  
    { 16,     200,    1000, 100000,     0,    0,   81,   82,    0,    0,    0 }, // 160 V Open
    { 17,     200,    1000, 100000,     0,    0,   86,   87,    0,    0,    0 }, // 170 V Open
    { 18,     200,    1000, 100000,     0,    0,   91,   92,    0,    0,    0 }, // 180 V Open
    { 19,     200,    1000, 100000,     0,    0,   96,   97,    0,    0,    0 }, // 190 V Open
    { 20,     200,    1000, 100000,     0,    0,  101,  102,    0,    0,    0 }, // 200 V Open 
    { 21,     200,    1000, 100000,     0,    0,  106,  107,    0,    0,    0 }, // 210 V Open
    { 22,     200,    1000, 100000,     0,    0,  111,  112,    0,    0,    0 }, // 220 V Open
    { 23,     200,    1000, 100000,     0,    0,  116,  117,    0,    0,    0 }, // 230 V Open
    { 24,     200,    1000, 100000,     0,    0,  121,  122,    0,    0,    0 }, // 240 V Open
    { 25,     200,    1000, 100000,     0,    0,  126,  127,    0,    0,    0 }, // 250 V Open    
    { 26,     200,    1000, 100000,     0,    0,  131,  132,    0,    0,    0 }, // 260 V Open
    { 27,     200,    1000, 100000,     0,    0,  136,  137,    0,    0,    0 }, // 270 V Open
    { 28,     200,    1000, 100000,     0,    0,  141,  142,    0,    0,    0 }, // 280 V Open
    { 29,     200,    1000, 100000,     0,    0,  146,  147,    0,    0,    0 }, // 290 V Open
    { 30,     200,    1000, 100000,     0,    0,  151,  152,    0,    0,    0 }, // 300 V Open

    { 31,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 32,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 33,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 34,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 35,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 36,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 37,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 38,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved
    { 39,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, // reserved

    // uSHORT
    { 40,     100,  300000,      0,     0,    0,  201,  202,  203,  204,  205 }, //40 1 V  uShort 
//  { 41,     100,  100000,      0,     0,    0,  206,  207,  208,  209,  210 }, //41  //10V  //sylee170620 
    { 41,       1,  100000,      0,     0,    0,  206,  207,  208,  209,  210 }, //41 10 V  uShort  
    { 42,     100,  100000,      0,     0,    0,  211,  212,    0,    0,    0 }, //42 20 V  uShort  
    { 43,     100,  100000,      0,     0,    0,  216,  217,    0,    0,    0 }, //43 30 V  uShort  
    { 44,     100,  100000,      0,     0,    0,  221,  222,    0,    0,    0 }, //44 40 V  uShort  
    { 45,     100,  100000,      0,     0,    0,  226,  227,    0,    0,    0 }, //50V      uShort  
    { 46,     100,  100000,      0,     0,    0,  231,  232,    0,    0,    0 }, //45 60 V  uShort
    { 47,     100,  100000,      0,     0,    0,  236,  237,    0,    0,    0 }, //46 70 V  uShort
    { 48,     100,  100000,      0,     0,    0,  241,  242,    0,    0,    0 }, //47 80 V  uShort
    { 49,     100,  100000,      0,     0,    0,  246,  247,    0,    0,    0 }, //48 90 V  uShort
    { 50,     100,  100000,      0,     0,    0,  251,  252,    0,    0,    0 }, //49 100 V uShort 
    { 51,     100,  100000,      0,     0,    0,  256,  257,    0,    0,    0 }, //50 110 V uShort
    { 52,     100,  100000,      0,     0,    0,  261,  262,    0,    0,    0 }, //51 120 V uShort
    { 53,     100,  100000,      0,     0,    0,  266,  267,    0,    0,    0 }, //52 130 V uShort
    { 54,     100,  100000,      0,     0,    0,  271,  272,    0,    0,    0 }, //53 140 V uShort      
    { 55,     100,  100000,      0,     0,    0,  276,  277,    0,    0,    0 }, //   150 V uShort  
    { 56,     100,  100000,      0,     0,    0,  281,  282,    0,    0,    0 }, //54 160 V uShort
    { 57,     100,  100000,      0,     0,    0,  286,  287,    0,    0,    0 }, //55 170 V uShort
    { 58,     100,  100000,      0,     0,    0,  291,  292,    0,    0,    0 }, //56 180 V uShort
    { 59,     100,  100000,      0,     0,    0,  296,  297,    0,    0,    0 }, //57 190 V uShort
    { 60,     100,  100000,      0,     0,    0,  301,  302,    0,    0,    0 }, //58 200 V uShort 
    { 61,     100,  100000,      0,     0,    0,  306,  307,    0,    0,    0 }, //59 210 V uShort
    { 62,     100,  100000,      0,     0,    0,  311,  312,    0,    0,    0 }, //60 220 V uShort
    { 63,     100,  100000,      0,     0,    0,  316,  317,    0,    0,    0 }, //61 230 V uShort
    { 64,     100,  100000,      0,     0,    0,  321,  322,    0,    0,    0 }, //62 240 V uShort
    { 65,     100,  100000,      0,     0,    0,  326,  327,    0,    0,    0 }, //63 250 V uShort    
    { 66,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, //64 260 V uShort
    { 67,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, //65 270 V uShort
    { 68,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, //66 280 V uShort
    { 69,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, //67 290 V uShort
    { 70,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 }, //68 300 V uShort

    { 71,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 72,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 73,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 74,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 75,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 76,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 77,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 78,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },
    { 79,       0,       0,      0,     0,    0,    0,    0,    0,    0,    0 },

};
 

//----------------------------------------
//son Calibration 전압 정보 parameter 테이블 
//----------------------------------------
//son 하기 dRec 테이블의 정의값은  Init 도중에 바뀐다. 
//son      CChildView1::OnInitialUpdate()=> CFileSysInfo::LoadSaveSet21(2)  호출시에 "\\SETUP\\SysSet21_ACE400.ini"  에서 read하여 변경함. 
//son      CChildView1 초기화때에 위와 같이 자동호출 되므로 따로 호출하지 않아도 이미 변경돼 있음. 

//     mode                                     Col0  // dRec 전압 Mode
//  int nCC;                //                  Col1  // 1: __CC ,  2: __CV 
//  int nVBSrc;             // VB source(nVRel) Col2  // 1: VR_LV1, 2: VR_LV2, 3: VR_HV1, 4: VR_HV2
//  int nVSet;              // Voltage Set      Col3  // 1~ 300
//  int nIRng;              // I Range          Col4  // 1~ 5
//  int nISet;              // I Set            Col5  // SysSet21.m_nDrec[i][5]의 nISet이 *10mA이므로 나누기 10해서 mA로 환산한 값
//                                                    // /10한 값이 IRange1,2는 mA,  IRange3,4,5는 uA(micro A) 단위
//  int nDelay;             // Delay            Col6  // usec 단위 (micro sec)
//                                                    // AutoTest ARun201_O11(), ARun201_4w_3()에서는 retryTimeOut으로 사용함. 
//                                                    // Service-> SelfTest에서는 nTimeDelay1 로 사용.
//  int nAdCnt;             // AD반복측정횟수   Col7  // 1회 측정시 내부 AD측정 count  (1~10)
//  int nFilter;            // ADC_B Filter     Col8  // 1: VcFast, 3: HvOpen, 4: 4W 
//  int nIFilter;           // ADC_A Filter     Col9  // 1: IFast,  2: ISlow,  3: VB
//  int nHvOffset;          // HV Offset        Col10 // 현재 미사용
//  int nHVGain;            // HV Open Gain     Col11 // 0: HvGain 미사용. 1~ 4
//  int nIGain;             // I Gain           Col12 // 0: IGain 미사용.  1: x1, 2: x10
//  int n4WGain;            // 4W Gain          Col13 // 0: 4W 미사용.     1: Slow x1000, 2: Fast x10, 3:Fast x100, 4:Fast x1000
//  int sCount;             // ??? 용도?        Col14
//  int nTest;              // Test 종류        Col15 // 0:CAL_NOT_USE 1:CAL_OPEN, 2:CAL_SHORT(Leak), 3:CAL_4W

 
//20120603
double dRec[MAX_TEST_MODE+2][16]=                                                   
{
//  0   ,     1 ,   2  ,    3 ,     4 ,       5,      6,      7,     8 ,     9  ,     10  ,    11 ,    12 ,   13,     14,     15       
// no  ,     nCC,  nVRel,  nVSet,   nIR,   nISet,  Delay,  AdCount, nFil ,  IFil ,  HVOffst,  HVGain, IGain, 4wGain,  sCount, nTest,                                            
{   0   ,   0   ,   0   ,   0   ,   0   ,     0,       0,     0 ,    0  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 },  //
{   1   ,   1   ,   2   ,   1   ,   1   ,     5,     100,     5 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } , //,3%,1~60,10%,60~150,100%,150~220     
{   2   ,   1   ,   2   ,   1   ,   1   ,     5,     200,     5 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } , //,3%,1~560,50%,560~1k,
{   3   ,   1   ,   2   ,   1   ,   1   ,     5,     800,     5 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } , //,3%,1~3k,10%,3k~180k,180k~1M,     
{   4   ,   1   ,   2   ,   1   ,   5   ,     5,    1000,     5 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } , //,3%,1~39k,10%,39k~1M,      
{   5   ,   1   ,   2   ,   2   ,   3   ,  1000,    3000,    10 ,    1  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } , //,3%,1~39k,10%,39k~1M,      
{   6   ,   1   ,   1   ,   10  ,   2   ,     5,     200,     5 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } , 
{   7   ,   1   ,   1   ,   10  ,   2   ,     5,     300,     3 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } ,   
{   8   ,   1   ,   1   ,   10  ,   2   ,     5,     500,     3 ,    0  ,   0   ,     0   ,    1 ,    0 ,   0 , 0 ,  0 } ,   
{   9   ,   1   ,   1   ,   10  ,   2   ,     5,    1000,     3 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,     
{   10  ,   1   ,   1   ,   10  ,   2   ,    10,    3000,     3 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , // HR 10M    1K~100M
{   11  ,   1   ,   3   ,   50  ,   5   ,     2,     800,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~1M,    2M  10%    
{   12 ,    1   ,   3   ,   50  ,   5   ,     2,    1000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET           4M  10%    
{   13 ,    1   ,   3   ,   50  ,   5   ,     2,    2000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~5M,    11M  10%      
{   14  ,   1   ,   3   ,   50  ,   5   ,     2,    3000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~10M,   15M  10%        
{   15  ,   1   ,   3   ,   50  ,   5   ,     2,    3500,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~15M,   15M  10%       
{   16  ,   1   ,   3   ,   100 ,   5   ,     1,     800,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~2M,   4M  10%      
{   17 ,    1   ,   3   ,   100 ,   5   ,     1,    1000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~10M,  15M  10%       
{   18 ,    1   ,   3   ,   100,    5   ,     1,    2000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~20M,  25M  10%         
{   19  ,   1   ,   3   ,   100 ,   5   ,     1,    3000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~30M,   30M  10%              
{   20  ,   1   ,   3   ,   100 ,   5   ,     1,    3500,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~50M,   60M  10%           
{   21  ,   1   ,   3   ,   150 ,   5   ,   0.7,     800,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET  5K~3M,   6M  10%       
{   22 ,    1   ,   3   ,   150 ,   5   ,   0.7,    1000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~10M,   15M  10%       
{   23 ,    1   ,   3   ,   150 ,   5   ,   0.7,    2000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~15M,  20M  10%        
{   24  ,   1   ,   3   ,   150 ,   5   ,   0.7,    3000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~30M,  50M  10%       
{   25  ,   1   ,   3   ,   150 ,   5   ,   0.7,    3500,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~50M,  60M  10%         
{   26  ,   1   ,   3   ,   200 ,   5   ,     1,     800,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //                10M  10%   
{   27 ,    1   ,   3   ,   200 ,   5   ,     1,    1000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~10M,   11M  10% 
{   28 ,    1   ,   3   ,   200 ,   5   ,     1,    2000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~30M,  50M  10%           
{   29  ,   1   ,   3   ,   200 ,   5   ,     1,    3000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~70M,  140M  10%        
{   30  ,   1   ,   3   ,   200 ,   5   ,     1,    3500,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~120M,   130M  10%      
{   31 ,    1   ,   3   ,   250 ,   5   ,     1,     800,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //                 470k  
{   32 ,    1   ,   3   ,   250 ,   5   ,     1,    1000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET    M,   1M  10%    
{   33 ,    1   ,   3   ,   250,    5   ,     1,    2000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET     M,   6.8M 10%         
{   34  ,   1   ,   3   ,   250 ,   5   ,     1,    3000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET  ~  M,    6.8M  10%      
{   35  ,   1   ,   3   ,   250 ,   5   ,     1,    3500,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET  ~  M,    20M  15~25%     
{   36  ,   1   ,   3   ,   120 ,   5   ,     2,     800,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET  ,     5M  10% 
{   37 ,    1   ,   3   ,   120 ,   5   ,     2,    1000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET   ,    15M  10%   
{   38 ,    1   ,   3   ,   120 ,   5   ,     2,    2000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET        20M  10%     
{   39  ,   1   ,   3   ,   120,    5   ,     2,    3000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~ 10M,    50M  10%     
{   40  ,   1   ,   3   ,   120 ,   5   ,     2,    3500,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~ 80M,    80M  10% 
{   41  ,   1   ,   1   ,   10  ,   2   ,     1,     800,    10 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , 
{   42  ,   1   ,   1   ,   10  ,   2   ,     1,    1000,    10 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,   
{   43  ,   1   ,   1   ,   10  ,   2   ,     1,    3000,    10 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,   
{   44  ,   1   ,   1   ,   10  ,   5   ,     1,    3000,    10 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,     
{   45  ,   1   ,   1   ,   10  ,   5   ,     2,    7000,    15 ,    1  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , // HR 10M    1K~100M
{   46  ,   1   ,   1   ,   10  ,   2   ,    10,    2000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , // SET  500K~11M  11M 20120410BIO2
{   47  ,   1   ,   3   ,   200 ,   3   ,  1000,    2000,     5 ,    1  ,   1   ,     1   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~120M,   130M  10%      
{   48  ,   0   ,   0   ,   0   ,   0   ,     0,       0,     0 ,    0  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } ,   
{   49  ,   0   ,   0   ,   0   ,   0   ,     0,       0,     0 ,    0  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } ,   
{   50  ,   0   ,   0   ,   0   ,   0   ,     0,       0,     0 ,    0  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } ,      
{   51  ,   1   ,   4   ,   50  ,   2   ,    10,     200,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,          
{   52  ,   1   ,   4   ,   50  ,   2   ,    10,     700,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , //1~320 OHM      
{   53  ,   1   ,   4   ,   50  ,   2   ,    10,    1000,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,  
{   54  ,   1   ,   4   ,  100  ,   2   ,   6.5,     200,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,
{   55  ,   1   ,   4   ,  100  ,   2   ,   6.5,     700,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,      
{   56  ,   1   ,   4   ,  100  ,   2   ,   6.5,    1000,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } ,
{   57  ,   1   ,   4   ,  150  ,   2   ,   6.5,     200,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , //50-680
{   58  ,   1   ,   4   ,  150  ,   2   ,   6.5,     700,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , //40-1000
{   59  ,   1   ,   4   ,  150  ,   2   ,   6.5,    1000,     3 ,    0  ,   0   ,     0   ,    2 ,    0 ,   0 , 0 ,  0 } , //40-1300
{   60  ,   0   ,   0   ,   0   ,   0   ,     0,       0,     0 ,    0  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } ,   
{   61  ,   1   ,   3   ,   200 ,   5   ,     3,   10000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //                10M  10%   
{   62 ,    1   ,   3   ,   200 ,   5   ,     3,    1000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~10M,   11M  10% 
{   63 ,    1   ,   3   ,   200 ,   5   ,     3,    2000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~30M,  50M  10%           
{   64  ,   1   ,   3   ,   200 ,   5   ,     3,    3000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~70M,  140M  10%        
{   65  ,   1   ,   3   ,   200 ,   5   ,     3,    3500,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET 5K~120M,   130M  10%      
{   66  ,   1   ,   3   ,   250 ,   5   ,   0.8,     800,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //                 470k  
{   67 ,    1   ,   3   ,   250 ,   5   ,   0.8,    1000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET    M,   1M  10%    
{   68 ,    1   ,   3   ,   250,    5   ,   0.8,    2000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET     M,   6.8M 10%         
{   69  ,   1   ,   3   ,   250 ,   5   ,   0.8,    3000,     5 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET  ~  M,    6.8M  10%      
{   70  ,   1   ,   3   ,   120 ,   5   ,    10,   10000,     3 ,    1  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 } , //  SET  ~  M,    20M  15~25%     
{   71  ,   1   ,   2   ,   7   ,   1   ,    40,    2000,     5 ,    1  ,   0   ,     0   ,    3 ,    0 ,   0 , 0 ,  0 } , // 4w,  1m, 150m,
{   72  ,   1   ,   1   ,   10  ,   1   ,    10,    2000,     5 ,    1  ,   0   ,     0   ,    3 ,    0 ,   0 , 0 ,  0 } , //4w,40m, 910m,  
{   73  ,   1   ,   1   ,   10  ,   3   ,  1000,    2000,     5 ,    1  ,   0   ,     0   ,    3 ,    0 ,   0 , 0 ,  0 } , //4w 
{   74  ,   1   ,   1   ,   10  ,   3   ,   200,    2000,     5 ,    1  ,   0   ,     0   ,    3 ,    0 ,   0 , 0 ,  0 } , //4w,8.2, 200
{   75  ,   0   ,   0   ,   0   ,   0   ,     0,       0,     0 ,    0  ,   0   ,     0   ,    0 ,    0 ,   0 , 0 ,  0 }            
 
};      
    
 
//-------------------------------
//son 4W Mode 별 MinR, MaxR 정보
//    modeIdx 1:171,  2:172, 3:173, 4:174, 5:175, 6:176, 7:177
//son dRec4w[modeIdx][0] : No 
//son dRec4w[modeIdx][1] : nMode1 
//son dRec4w[modeIdx][2] : minR 
//son dRec4w[modeIdx][3] : maxR 


int dRec4w[15][11]=                                                 
{
    // No      nMode       Min R     Max R
    {   0   ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 },   //LOW     //HIGH
    {   1   ,   171 ,         0,        80,     0,     0,     0,    0,    0,   0,   0 },   //,1m,     200m      sylee170314  ray 150->100
    {   2   ,   172 ,        50,       800,     0,     0,     0,    0,    0,   0,   0 },   //,50m,    510m   
    {   3   ,   173 ,       800,      8000,     0,     0,     0,    0,    0,   0,   0 },   //,510m,   8
    {   4   ,   174 ,      8000,    500000,     0,     0,     0,    0,    0,   0,   0 },   //,8.2,    200
    {   5   ,   175 ,    400000,   1000000,     0,     0,     0,    0,    0,   0,   0 }, 
    {   6   ,   176 ,   1000000,   2000000,     0,     0,     0,    0,    0,   0,   0 }, 
    {   7   ,   177 ,   2000000,   3000000,     0,     0,     0,    0,    0,   0,   0 }, 
    {   8   ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 }, 
    {   9   ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 }, 
    {   10  ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 }, 
    {   11  ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 }, 
    {   12  ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 }, 
    {   13  ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 }, 
    {   14  ,   0   ,         0,         0,     0,     0,     0,    0,    0,   0,   0 } 
};


//sylee070327-3   80  800  10000   ray ok


 //SYLEE161010  I RANGE1  DOUBLE
//SYLEE161202-BHFLEX
//son CFileSysInfo::LoadSaveSet21_4W_Range(int type) 으로 Max R 값만 파일에서 로딩해 온다.
//    from "C:\\ACE500\\SETUP\\SysSet21_4W.ini"
int dRec4w1[15][11]=                                                    
{
    // No      nMode       Min R     Max R
    {   0   ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 },   //LOW     //HIGH
    {   1   ,   171 ,        0,       80,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 },   //,1m,     200m          
    {   2   ,   172 ,       50,      800,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 },   //,50m,    510m   
    {   3   ,   173 ,      800,     8000,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 },   //,510m,   8
    {   4   ,   174 ,     8000,   500000,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 },   //,8.2,    200
    {   5   ,   175 ,   400000,  1000000,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   6   ,   176 ,  1000000,  2000000,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   7   ,   177 ,  2000000,  3000000,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   8   ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   9   ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   10  ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   11  ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   12  ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   13  ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 }, 
    {   14  ,   0   ,        0,        0,    0  ,   0    ,  0  ,   0     , 0  ,   0   , 0 } 
};
   //SYLEE161010  I RANGE1  DOUBLE




